{"version":3,"sources":["resources/theme/Screen.js","resources/components/atoms/Card/Card.tsx","resources/components/atoms/Card/index.tsx","resources/components/atoms/Loading/Loading.tsx","resources/components/atoms/Loading/index.tsx","config/library/redux/store/Home/action.js","pages/default/Home/Home.tsx","pages/default/Home/index.tsx","config/library/redux/store/Favorite/action.js","pages/default/Favorite/Favorite.tsx","pages/default/Favorite/index.tsx","pages/default/PageNotFound/PageNotFound.tsx","pages/default/PageNotFound/index.tsx","pages/App/Router.tsx","resources/components/atoms/Navbar/Navbar.tsx","resources/components/atoms/Navbar/index.tsx","resources/components/atoms/Search/Search.tsx","resources/components/atoms/Search/index.tsx","pages/App/index.tsx","pages/App/App.tsx","config/library/redux/store/Home/reducer.js","config/library/redux/store/Favorite/reducer.js","config/library/redux/store/rootReducers.js","services/api/Home.js","services/api/Favorite.js","config/library/redux/store/Home/saga.js","config/library/redux/store/Favorite/saga.js","config/library/redux/store/rootSagas.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["gridBreakpoint","sm","lg","xl","Card","props","state","info","onFavorite","onUnFavorite","isCurrent","useSelector","Favorite","list","find","row","data","full_name","CardRoot","CardHref","CardTitleRoot","href","html_url","target","CardTitle","CardLanguage","language","CardStar","className","watchers","license","CardMIT","spdx_id","CardInfoRoot","CardDes","description","CardFooter","CardLink","CardFavorite","onClick","defaultProps","styled","li","screen","div","a","p","span","button","Loading","LoadRoot","LoadContainer","Speeding","rotate","keyframes","Types","getMaskRequest","title","page","type","payload","getMaskSuccess","IsLoading","Switch","changePage","Home","dispatch","useDispatch","isLoading","searchTitle","search","pageNumber","useEffect","window","removeEventListener","someFunction","handleFavorite","createFavorite","document","documentElement","scrollTop","clientHeight","scrollHeight","addEventListener","CardContainer","map","key","ul","getFavoriteRequest","getFavoriteSuccess","handleUnFavorite","id","removeFavoriteRequest","_id","PageNotFound","PageNotFoundRoot","Router","path","exact","component","Navbar","iscurrent","NavbarRoot","NavbarList","NavbarLink","to","Link","css","Title","Search","onChange","onKeyDown","value","SearchRoot","Icon","Input","placeholder","input","App","useState","SearchTitle","setSearch","active","setActive","e","keyCode","initState","action","rootReducer","combineReducers","getMaskApi","axios","get","post","getFavoriteApi","removeFavoriteApi","delete","getMask","watchGetNoteRequest","watchCreateFavoriteSuccess","call","api","result","items","put","actions","takeEvery","apiFavorite","actionsFavorite","HomeSagas","fork","getFavorite","watchGetFavoriteRequest","removeFavorite","watchRemoveFavoriteRequest","FavoriteSagas","rootSagas","all","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducers","applyMiddleware","run","defaults","baseURL","React","Component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dd6e2580.chunk.js","sourcesContent":["export const gridBreakpoint = {\r\n    sm: '767px',\r\n    lg: '992px',\r\n    xl: '1200px'\r\n}\r\n\r\nexport default {\r\n    sm: `screen and (max-width: ${gridBreakpoint.sm})`,\r\n    lg: `screen and (max-width: ${gridBreakpoint.lg})`,\r\n    xl: `screen and (max-width: ${gridBreakpoint.xl})`,\r\n}","import React from 'react';\r\nimport styled, {css} from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport screen from 'resources/theme/Screen';\r\n\r\nconst source =  {\r\n    \"href\": \"first\",\r\n    \"full_name\": \"test\",\r\n    \"license\": null\r\n} \r\n\r\ninterface Props {\r\n    info: any,\r\n    onFavorite?: any,\r\n    onUnFavorite?: any\r\n}\r\n\r\ninterface State {\r\n    Favorite: {\r\n        list: Array<any>\r\n    }\r\n}\r\n\r\nconst Card = (props: Props, state: State) => {\r\n    const { info, onFavorite, onUnFavorite } = props;\r\n\r\n    const FavoriteList = useSelector((state: State) => state.Favorite.list);\r\n\r\n    const isCurrent = FavoriteList.find(row => { if (row.data.full_name === info.full_name) return true})\r\n\r\n    return(\r\n        <CardRoot>\r\n            <CardHref>\r\n                <CardTitleRoot href={info.html_url} target=\"_black\">\r\n                    <CardTitle>{info.full_name}</CardTitle>\r\n                    <CardLanguage>{info.language}</CardLanguage>\r\n                    <CardStar>\r\n                        <i className=\"icon-star-24px\"/>\r\n                        {info.watchers}\r\n                    </CardStar>\r\n                    {\r\n                        info.license !== null && (\r\n                            <CardMIT>{info.license.spdx_id}</CardMIT>\r\n                        )\r\n                    }\r\n                </CardTitleRoot>\r\n                <CardInfoRoot>\r\n                    <CardDes>{info.description}</CardDes>\r\n                    <CardFooter>\r\n                        <CardLink href={info.html_url} target=\"_black\">前往github頁面</CardLink>\r\n                        {!isCurrent && (\r\n                            <CardFavorite onClick={onFavorite}>加入收藏</CardFavorite>\r\n                        )}\r\n                        {onUnFavorite && (\r\n                            <CardFavorite onClick={onUnFavorite}>取消收藏</CardFavorite>\r\n                        )}\r\n                    </CardFooter>\r\n                    \r\n                </CardInfoRoot>\r\n            </CardHref>\r\n        </CardRoot>\r\n    )\r\n}\r\n\r\nCard.defaultProps = {\r\n    info: source\r\n}\r\n\r\nexport default Card;\r\n\r\nconst CardRoot = styled.li`\r\n    width: calc(50% - 30px);\r\n    margin: 20px 15px;\r\n    list-style: none;\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n    background-color: #fff;\r\n    box-shadow: 0 0 10px rgba(0,0,0,.15);\r\n    transition: .5s;\r\n\r\n    &:hover{\r\n        box-shadow: 0 0 10px rgba(0,0,0,.3);\r\n    }\r\n\r\n    @media ${screen.sm} {\r\n        width: 100%;\r\n        margin: 10px 15px;\r\n    }\r\n`;\r\n\r\nconst CardHref = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n`;\r\n\r\nconst CardTitleRoot = styled.a`\r\n    padding: 20px;\r\n    background-color: #38B2A9;\r\n    color: #fff;\r\n    word-break: break-all;\r\n\r\n    @media ${screen.sm} {\r\n        padding: 15px;\r\n    }\r\n`;\r\n\r\nconst CardTitle = styled.p`\r\n    font-size: 24px;\r\n    margin-bottom: 5px;\r\n\r\n    @media ${screen.lg} {\r\n        font-size: 18px;\r\n    }\r\n`;\r\n\r\nconst CardLanguage = styled.p`\r\n    font-size: 20px;\r\n    min-height: 30px;\r\n    margin-bottom: 5px;\r\n\r\n    @media ${screen.lg} {\r\n        font-size: 15px;\r\n    }\r\n`;\r\n\r\nconst CardStar = styled.span`\r\n    color: #f1e05a;\r\n\r\n    @media ${screen.lg} {\r\n        font-size: 12px;\r\n    }\r\n`;\r\n\r\nconst CardMIT = styled.span`\r\n    display: inline-block;\r\n    margin-left: 10px;\r\n\r\n    @media ${screen.lg} {\r\n        font-size: 12px;\r\n    }\r\n`;\r\n\r\nconst CardInfoRoot = styled.div`\r\n    padding: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n\r\n    @media ${screen.sm} {\r\n        padding: 15px;\r\n    }\r\n`;\r\n\r\nconst CardDes = styled.p`\r\n    margin-bottom: 15px;\r\n\r\n    @media ${screen.lg} {\r\n        margin-bottom: 10px;\r\n        font-size: 14px;\r\n    }\r\n`;\r\n\r\nconst CardFavorite = styled.button`\r\n    background-color: #38B2A9;\r\n    color: #fff;\r\n    padding: 10px 12px;\r\n    border-radius: 8px;\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    transition: .5s;\r\n    font-weight: bold;\r\n\r\n    @media ${screen.lg} {\r\n        font-size: 12px;\r\n    }\r\n\r\n    @media ${screen.sm} {\r\n        padding: 8px 10px;\r\n    }\r\n\r\n    &:hover{\r\n        background-color: #2d958e;\r\n    }\r\n`;\r\n\r\nconst CardLink = styled.a`\r\n    margin-right: 8px;\r\n    background-color: #38B2A9;\r\n    color: #fff;\r\n    padding: 10px 12px;\r\n    border-radius: 8px;\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    transition: .5s;\r\n    font-weight: bold;\r\n\r\n    @media ${screen.lg} {\r\n        font-size: 12px;\r\n    }\r\n\r\n    @media ${screen.sm} {\r\n        padding: 8px 10px;\r\n    }\r\n\r\n    &:hover{\r\n        background-color: #2d958e;\r\n    }\r\n`;\r\n\r\nconst CardFooter = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-top: auto;\r\n`;\r\n","import Card from './Card';\r\n\r\nexport default Card;","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\ninterface Props {}\r\n\r\ninterface State {}\r\n\r\nconst Loading = (props: Props, state: State) => {\r\n    return(\r\n        <LoadRoot>\r\n            <LoadContainer>\r\n                <Speeding/>\r\n            </LoadContainer>\r\n        </LoadRoot>\r\n    )\r\n}\r\n\r\nexport default Loading;\r\n\r\nconst rotate = keyframes`\r\n    100%{ \r\n        transform: rotate(360deg); transform: rotate(360deg)\r\n    };\r\n`;\r\n\r\nconst LoadRoot = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: rgba(0,0,0,.2);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst LoadContainer = styled.div`\r\n    width: 100%;\r\n\theight: 50px;\r\n\ttext-align: center;\r\n`;\r\n\r\nconst Speeding = styled.div`\r\n    width: 50px;\r\n\theight: 50px;\r\n\tmargin: 0 auto;\r\n\tborder: 3px solid #38B2A9;\r\n\tborder-radius: 50%;\r\n\tborder-left-color: transparent;\r\n\tborder-right-color: transparent;\r\n\tanimation: ${rotate} 500ms infinite linear;\r\n`;","import Loading from './Loading';\r\n\r\nexport default Loading;","export const Types = {\r\n    GET_MASK_REQUEST: 'home/get_mask_request',\r\n    GET_MASK_SUCCESS: 'home/get_mask_success',\r\n\r\n    ISLOADING: 'home/is_loading',\r\n    ENTER_MASK: 'home/enter_mask',\r\n\r\n    CREATE_FAVORITE: 'home/create_favorite',\r\n\r\n    CHANGE_PAGE: 'home/change_page',\r\n\r\n    CREATE_SEARCH: 'home/create_search',\r\n}\r\n\r\nexport const getMaskRequest = ({ title, page}) => ({\r\n    type: Types.GET_MASK_REQUEST,\r\n    payload: {\r\n        title,\r\n        page\r\n    }\r\n})\r\n\r\nexport const getMaskSuccess = ({list}) => ({\r\n    type: Types.GET_MASK_SUCCESS,\r\n    payload: {\r\n        list\r\n    }\r\n})\r\n\r\nexport const IsLoading = (Switch) => ({\r\n    type: Types.ISLOADING,\r\n    payload: {\r\n        Switch\r\n    }\r\n})\r\n\r\nexport const enterMask = () => ({\r\n    type: Types.ENTER_MASK\r\n})\r\n\r\nexport const changePage = (page) => ({\r\n    type: Types.CHANGE_PAGE,\r\n    payload: {\r\n        page\r\n    }\r\n})\r\n\r\nexport const createFavorite = (info) => ({\r\n    type: Types.CREATE_FAVORITE,\r\n    payload: {\r\n        info\r\n    }\r\n})\r\n\r\nexport const createSearch = (search) => ({\r\n    type: Types.CREATE_SEARCH,\r\n    payload: {\r\n        search\r\n    }\r\n})","import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Card from 'resources/components/atoms/Card';\r\nimport Loading from 'resources/components/atoms/Loading';\r\n\r\nimport { getMaskRequest, IsLoading, createFavorite, changePage } from 'config/library/redux/store/Home/action';\r\n\r\ninterface Props {}\r\n\r\ninterface State {\r\n    Home: {\r\n        list: Array<any>,\r\n        page: number,\r\n        isLoading: boolean,\r\n        search: String,\r\n    },\r\n    Favorite: {\r\n        list: Array<any>\r\n    }\r\n}\r\n\r\nconst Home = (props: Props, state: State) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const list = useSelector((state: State) => state.Home.list);\r\n    const isLoading = useSelector((state: State) => state.Home.isLoading);\r\n    const searchTitle = useSelector((state: State) => state.Home.search)\r\n    const pageNumber = useSelector((state: State) => state.Home.page);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            window.removeEventListener('scroll', someFunction)\r\n        }\r\n    });\r\n\r\n    const handleFavorite = (info: any) => {\r\n        dispatch(IsLoading(true))\r\n        dispatch(createFavorite(info))\r\n    }\r\n\r\n    const someFunction = () => {\r\n        let scrollTop = document.documentElement.scrollTop;\r\n        let clientHeight = document.documentElement.clientHeight;\r\n        let scrollHeight = document.documentElement.scrollHeight;\r\n\r\n        if (scrollTop + clientHeight >= scrollHeight) {\r\n            const title = searchTitle\r\n            let page = pageNumber + 1\r\n            dispatch(changePage(page))\r\n            dispatch(IsLoading(true))\r\n            dispatch(getMaskRequest({ title, page }))\r\n        }\r\n    }\r\n\r\n    window.addEventListener('scroll', someFunction);\r\n\r\n    return(\r\n        <CardContainer>\r\n            <CardRoot>\r\n                {\r\n                    list && (\r\n                        list.map(row => {\r\n                            return (\r\n                                <Card key={row.full_name} info={row} onFavorite={() => handleFavorite(row)} />\r\n                            )\r\n                        })\r\n                    )\r\n                }\r\n            </CardRoot>\r\n            {isLoading === true && (<Loading/>)} \r\n        </CardContainer>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n\r\nconst CardContainer = styled.div`\r\n    max-width: 1280px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nconst CardRoot = styled.ul`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n`;","import Home from './Home';\r\n\r\nexport default Home;","export const Types = {\r\n    GET_FAVORITE_REQUEST: 'favorite/get_favorite_request',\r\n    GET_FAVORITE_SUCCESS: 'favorite/get_favorite_success',\r\n\r\n    REMOVE_FAVORITE_REQUEST: 'favorite/remove_favorite_request',\r\n\r\n    ISLOADING: 'favorite/is_loading',\r\n}\r\n\r\nexport const getFavoriteRequest = () => ({\r\n    type: Types.GET_FAVORITE_REQUEST\r\n})\r\n\r\nexport const getFavoriteSuccess = (list) => ({\r\n    type: Types.GET_FAVORITE_SUCCESS,\r\n    payload: {\r\n        list\r\n    }\r\n})\r\n\r\nexport const removeFavoriteRequest = id => ({\r\n    type: Types.REMOVE_FAVORITE_REQUEST,\r\n    payload: {\r\n        id\r\n    }\r\n})\r\n\r\nexport const IsLoading = (Switch) => ({\r\n    type: Types.ISLOADING,\r\n    payload: {\r\n        Switch\r\n    }\r\n})","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport Card from 'resources/components/atoms/Card';\r\nimport Loading from 'resources/components/atoms/Loading';\r\n\r\nimport { getFavoriteRequest, removeFavoriteRequest, IsLoading } from 'config/library/redux/store/Favorite/action';\r\n\r\ninterface Props { }\r\n\r\ninterface State {\r\n    Favorite: {\r\n        list: Array<any>,\r\n        isLoading: boolean\r\n    }\r\n}\r\n\r\nconst Favorite = (props: Props, state: State) =>{\r\n    const dispatch = useDispatch();\r\n\r\n    const list = useSelector((state: State) => state.Favorite.list);\r\n    const isLoading = useSelector((state: State) => state.Favorite.isLoading);\r\n\r\n    useEffect(() => {\r\n        dispatch(IsLoading(true))\r\n        dispatch(getFavoriteRequest())\r\n    },[]);\r\n\r\n    const handleUnFavorite = (id: any) => {\r\n        dispatch(IsLoading(true))\r\n        dispatch(removeFavoriteRequest(id))\r\n    }\r\n\r\n    return(\r\n        <CardContainer>\r\n            <CardRoot>\r\n                {\r\n                    list && (\r\n                        <>\r\n                            {\r\n                                list.map(row => (\r\n                                    <Card key={row._id} info={row.data} onUnFavorite={() => handleUnFavorite(row._id)}/>\r\n                                ))\r\n                            }\r\n                        </>\r\n                    )\r\n                }\r\n            </CardRoot>\r\n            {isLoading === true && (<Loading />)} \r\n        </CardContainer>\r\n    )\r\n}\r\n\r\nexport default Favorite;\r\n\r\nconst CardContainer = styled.div`\r\n    max-width: 1280px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nconst CardRoot = styled.ul`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n`;","import Favorite from './Favorite';\r\n\r\nexport default Favorite;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst PageNotFound = () => {\r\n    return(\r\n        <PageNotFoundRoot>Page Not Found</PageNotFoundRoot>\r\n    )\r\n}\r\n\r\nexport default PageNotFound;\r\n\r\nconst PageNotFoundRoot = styled.div`\r\n    position: fixed;\r\n    background-color: #fff;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    color: #38B2A9;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 30px;\r\n`","import PageNotFound from \"./PageNotFound\";\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\n\r\nimport Home from 'pages/default/Home';\r\nimport Favorite from 'pages/default/Favorite';\r\nimport PageNotFound from 'pages/default/PageNotFound';\r\n\r\n\r\nfunction Router() {\r\n    return(\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/Favorite\" component={Favorite} />\r\n\r\n            <Route component={PageNotFound} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Router;","import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Props {\r\n    className?: string,\r\n    onClick: Function,\r\n    iscurrent: any\r\n}\r\n\r\ninterface State {}\r\n\r\ninterface MyStyle {\r\n    iscurrent: any\r\n}\r\n\r\nconst Navbar = (props: Props, state: State) => {\r\n    const { className, onClick, iscurrent} = props\r\n\r\n    return(\r\n        <NavbarRoot className={className}>\r\n            <NavbarList>\r\n                <NavbarLink to=\"/\" onClick={() => onClick(true)} iscurrent={`${iscurrent}`}>搜尋</NavbarLink>\r\n            </NavbarList>\r\n            <NavbarList>\r\n                <NavbarLink to=\"/Favorite\" onClick={() => onClick(false)} iscurrent={`${!iscurrent}`}>收藏</NavbarLink>\r\n            </NavbarList>\r\n        </NavbarRoot>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n\r\nconst NavbarRoot = styled.ul`\r\n    padding: 20px;\r\n    background-color: #38B2A9;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst NavbarList = styled.li`\r\n\r\n`;\r\n\r\nconst NavbarLink = styled(Link)`\r\n    padding: 0 5px;\r\n    margin: 0 10px;\r\n    color: #fff;\r\n    position: relative;\r\n\r\n    &:after{\r\n        content: '';\r\n        position: absolute;\r\n        width: 0%;\r\n        left: 50%;\r\n        bottom: -5px;\r\n        transform: translateX(-50%);\r\n        height: 2px;\r\n        background-color: #fff;\r\n        transition: .5s;\r\n    }\r\n\r\n    &:hover{\r\n        &:after{\r\n            width: 100%;\r\n        }\r\n    }\r\n\r\n    ${(props: MyStyle) => props.iscurrent === 'true' && css`\r\n        &:after{\r\n            width: 100%;\r\n        }\r\n    `};\r\n`;","import Title from './Navbar';\r\n\r\nexport default Title;","import React from 'react';\r\nimport styled, {css} from 'styled-components';\r\n\r\nimport screen from 'resources/theme/Screen';\r\n\r\ninterface Props {\r\n    className?: string,\r\n    onChange: any,\r\n    onKeyDown: any\r\n    value: string,\r\n    iscurrent: any\r\n}\r\n\r\ninterface State {}\r\n\r\ninterface MyStyle {\r\n    iscurrent: any\r\n}\r\n\r\nconst Search = (props: Props, state: State) => {\r\n    const { className, onChange, onKeyDown, value, iscurrent} = props;\r\n\r\n    return(\r\n        <SearchRoot className={className} iscurrent={!iscurrent}>\r\n            <Icon className=\"icon-search-24px\"></Icon>\r\n            <Input type=\"text\" placeholder=\"搜尋\" onChange={onChange} onKeyDown={onKeyDown} value={value}/>\r\n        </SearchRoot>\r\n    )\r\n}\r\n\r\nexport default Search;\r\n\r\nconst SearchRoot = styled.div`\r\n    display: flex;\r\n    width: 290px;\r\n    max-width: calc(100% - 30px);\r\n    align-items: center;\r\n    border-radius: 8px;\r\n    background-color: #ddd;\r\n    padding: 12px 20px;\r\n    margin: 40px auto 20px auto;\r\n\r\n    @media ${screen.sm} {\r\n        margin-top: 30px;\r\n    }\r\n\r\n    ${(props: MyStyle) => props.iscurrent && css`\r\n        display: none\r\n    `};\r\n`;\r\n\r\nconst Icon = styled.span`\r\n    font-size: 21px;\r\n    color: #333;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    font-family: 'Helvetica Neue','Microsoft JhengHei',sans-serif;\r\n    padding: 0;\r\n    border: none;\r\n    background-color: transparent;\r\n    outline: none;\r\n    margin-left: 12px;\r\n    flex: 1;\r\n    font-weight: bold;\r\n\r\n    &::-webkit-input-placeholder{\r\n        color: #A3A3A3;\r\n    }\r\n\r\n    &:-moz-placeholder{\r\n        color: #A3A3A3;\r\n    }\r\n\r\n    &::-moz-placeholder{\r\n        color: #A3A3A3;\r\n    }\r\n\r\n    &input:-ms-input-placeholder{\r\n        color: #A3A3A3;\r\n    }\r\n`;","import Search from './Search';\r\n\r\nexport default Search;","import App from './App';\r\n\r\nexport default App;","import React, { useState } from 'react';\r\nimport { HashRouter, BrowserRouter} from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport Router from './Router';\r\nimport Navbar from 'resources/components/atoms/Navbar';\r\nimport Search from 'resources/components/atoms/Search';\r\n\r\nimport { getMaskRequest, IsLoading, enterMask, createSearch, changePage } from 'config/library/redux/store/Home/action';\r\nimport { getFavoriteRequest } from 'config/library/redux/store/Favorite/action';\r\n\r\ninterface Props { }\r\n\r\ninterface State {}\r\n\r\nconst App = (props: Props, state: State) => {\r\n    const [SearchTitle, setSearch] = useState('');\r\n    const [active, setActive] = useState(true);\r\n    const dispatch = useDispatch()\r\n\r\n    const handleActive = (type: any) => {\r\n        setActive(type)\r\n    }\r\n\r\n    const handleSearch = (e: any) => {\r\n        setSearch(e.target.value)\r\n    }\r\n\r\n    const handleEnter = (e: any) => {\r\n        const title = e.target.value\r\n\r\n        if (e.keyCode === 13) {\r\n            const page = 1\r\n\r\n            dispatch(IsLoading(true))\r\n            dispatch(enterMask())\r\n            dispatch(createSearch(title))\r\n            dispatch(changePage(page))\r\n            dispatch(getMaskRequest({ title, page }))\r\n            dispatch(getFavoriteRequest())\r\n        }\r\n    }\r\n\r\n    return(\r\n        <HashRouter>\r\n            <Navbar onClick={handleActive} iscurrent={active}/>\r\n            <Search onChange={handleSearch} value={SearchTitle} onKeyDown={handleEnter} iscurrent={active}/>\r\n            <Router/>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import { Types } from './action'\r\n\r\nconst initState = {\r\n    list: [],\r\n    page: 1,\r\n    isLoading: false,\r\n    search: ''\r\n}\r\n\r\n\r\nconst Home = (state = initState, action) => {\r\n    switch(action.type){\r\n        case Types.GET_MASK_SUCCESS :\r\n            return {\r\n                ...state,\r\n                list: [...state.list, ...action.payload.list],\r\n                isLoading: false\r\n            }\r\n\r\n        case Types.CREATE_SEARCH :\r\n            return {\r\n                ...state,\r\n                search: action.payload.search\r\n            }\r\n\r\n        case Types.ISLOADING :\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload.Switch\r\n            }\r\n\r\n        case Types.ENTER_MASK :\r\n            return {\r\n                ...state,\r\n                list: [],\r\n                page: 1\r\n            }\r\n\r\n        case Types.CHANGE_PAGE:\r\n            return {\r\n                ...state,\r\n                page: action.payload.page\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default Home;","import { Types } from './action'\r\n\r\nconst initState = {\r\n    list: [],\r\n    isLoading: false\r\n}\r\n\r\n\r\nconst Favorite = (state = initState, action) => {\r\n    switch(action.type){\r\n        case Types.GET_FAVORITE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                list: [...action.payload.list]\r\n            }\r\n\r\n        case Types.ISLOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload.Switch\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default Favorite;","import { combineReducers } from 'redux';\r\n\r\nimport Home from './Home/reducer';\r\nimport Favorite from './Favorite/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    Home, Favorite\r\n})\r\n\r\nexport default rootReducer","import axios from 'axios';\r\n\r\nexport const getMaskApi = ({title, page}) => {\r\n    return axios.get(`/search/repositories?q=${title}&per_page=10&page=${page}`)\r\n};\r\n\r\nexport const createFavorite = (info) => {\r\n    return axios.post('https://thawing-inlet-37368.herokuapp.com/api/lists/add', { data: info})\r\n}","import axios from 'axios';\r\n\r\nexport const getFavoriteApi = () => {\r\n    return axios.get('https://thawing-inlet-37368.herokuapp.com/api/lists')\r\n};\r\n\r\nexport const removeFavoriteApi = id => {\r\n    return axios.delete(`https://thawing-inlet-37368.herokuapp.com/api/lists/delete/${id}`)\r\n}","import {takeEvery, takeLatest, take, call, fork, put} from 'redux-saga/effects';\r\nimport * as actions from './action';\r\nimport * as actionsFavorite from '../Favorite/action';\r\nimport * as api from 'services/api/Home';\r\nimport * as apiFavorite from 'services/api/Favorite';\r\n\r\nfunction* getMask(action, payload) {\r\n    try{\r\n        const result = yield call(api.getMaskApi, { title: action.payload.title, page: action.payload.page });\r\n        if (result.data.items !== 0) {\r\n            yield put(actions.getMaskSuccess({\r\n                list: result.data.items\r\n            }))\r\n            yield put(actions.IsLoading(false))\r\n        } else {\r\n            yield put(actions.IsLoading(false))\r\n        }\r\n    }catch (e) {\r\n\r\n    }\r\n}\r\n\r\nfunction* watchGetNoteRequest() {\r\n    yield takeEvery(actions.Types.GET_MASK_REQUEST, getMask)\r\n}\r\n\r\nfunction* createFavorite(action, payload) {\r\n    try{\r\n        yield call(api.createFavorite, action.payload.info)\r\n        const result = yield call(apiFavorite.getFavoriteApi)\r\n        yield put(actionsFavorite.getFavoriteSuccess(result.data))\r\n        yield put(actions.IsLoading(false))\r\n    }catch (e) {\r\n\r\n    }\r\n}\r\n\r\nfunction* watchCreateFavoriteSuccess() {\r\n    yield takeEvery(actions.Types.CREATE_FAVORITE, createFavorite)\r\n}\r\n\r\nconst HomeSagas = [\r\n    fork(watchGetNoteRequest),\r\n    fork(watchCreateFavoriteSuccess)\r\n];\r\n\r\nexport default HomeSagas;","import {takeEvery, takeLatest, take, call, fork, put} from 'redux-saga/effects';\r\nimport * as actions from './action';\r\nimport * as api from 'services/api/Favorite';\r\n\r\nfunction* getFavorite(action, payload) {\r\n    try{\r\n        const result = yield call(api.getFavoriteApi)\r\n        yield put(actions.getFavoriteSuccess(result.data))\r\n        yield put(actions.IsLoading(false))\r\n    }catch (e) {\r\n        \r\n    }\r\n}\r\n\r\nfunction* watchGetFavoriteRequest() {\r\n    yield takeEvery(actions.Types.GET_FAVORITE_REQUEST, getFavorite)\r\n}\r\n\r\nfunction* removeFavorite(action, payload) {\r\n    try{\r\n        yield call(api.removeFavoriteApi, action.payload.id)\r\n        yield getFavorite()\r\n    }catch (e) {\r\n\r\n    }\r\n}\r\n\r\nfunction* watchRemoveFavoriteRequest() {\r\n    yield takeEvery(actions.Types.REMOVE_FAVORITE_REQUEST, removeFavorite)\r\n}\r\n\r\nconst FavoriteSagas = [\r\n    fork(watchGetFavoriteRequest),\r\n    fork(watchRemoveFavoriteRequest)\r\n];\r\n\r\nexport default FavoriteSagas;","import {all} from 'redux-saga/effects';\r\nimport HomeSagas from './Home/saga';\r\nimport FavoriteSagas from './Favorite/saga';\r\n\r\nexport default function* rootSagas() {\r\n    yield all([\r\n        ...HomeSagas,\r\n        ...FavoriteSagas\r\n    ])\r\n}","import React from 'react';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Entrance from 'pages/App';\r\n\r\nimport rootReducers from 'config/library/redux/store/rootReducers';\r\nimport rootSagas from 'config/library/redux/store/rootSagas';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nlet store = createStore(\r\n  rootReducers,\r\n  composeEnhancers(applyMiddleware(sagaMiddleware))\r\n)\r\n\r\nsagaMiddleware.run(rootSagas);\r\n\r\naxios.defaults.baseURL = 'https://api.github.com/'\r\n\r\ninterface Props { }\r\n\r\ninterface State { }\r\n\r\nclass App extends React.Component<Props, State> {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Provider store={store}>\r\n        <Entrance/>\r\n      </Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\nimport './reset.css';\r\nimport 'resources/assets/icon/style.css'\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}